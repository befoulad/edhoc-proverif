Linear part:
exp(exp(g,x_24),y_25) = exp(exp(g,y_25),x_24)
Completing equations...
Completed equations:
exp(exp(g,x_24),y_25) = exp(exp(g,y_25),x_24)
Convergent part:
Completing equations...
Completed equations:
Process:
{1}new U: host;
{2}new V: host;
{3}new skU: skey;
{4}new skV: skey;
{5}let pkU: pkey = pk(skU) in
{6}let pkV: pkey = pk(skV) in
{7}let pkIdU: pkID = identifyPK(skU,pk(skU)) in
{8}let pkIdV: pkID = identifyPK(skV,pk(skV)) in
{9}out(c, pkU);
{10}out(c, pkV);
(
    {11}!
    {12}new x_63: exponent;
    {13}let E_U: G = exp(g,x_63) in
    {14}new S_U: bitstring;
    {15}new N_U: nonce;
    {16}new APP_64: bitstring;
    {17}let message_1_65: bitstring = (MSG_TYPE_1,S_U,N_U,E_U,APP_64) in
    {18}out(c, message_1_65);
    {19}in(c, message_2_66: bitstring);
    {20}let (data_2_67: bitstring,COSE_ENC_2_68: bitstring) = message_2_66 in
    {21}let (=MSG_TYPE_2,=S_U,xS_V: bitstring,N_V: nonce,xE_V: G) = data_2_67 in
    {22}let aad_2_69: bitstring = hash((message_1_65,data_2_67)) in
    {23}let K: G = exp(xE_V,x_63) in
    {24}let K_2_70: derivedKey = HKDF(K,aad_2_69) in
    {25}let signature_2_71: bitstring = decrypt(COSE_ENC_2_68,K_2_70,aad_2_69) in
    {26}let (=pkIdV,=aad_2_69,APP_2_72: bitstring) = verify(signature_2_71,pkV) in
    {27}new APP_73: bitstring;
    {28}let data_3_74: bitstring = (MSG_TYPE_3,xS_V) in
    {29}let aad_3_75: bitstring = hash((hash((message_1_65,message_2_66)),data_3_74)) in
    {30}let signature_3_76: bitstring = sign((identifyPK(skU,pkU),aad_3_75,APP_73),skU) in
    {31}let K_3_77: derivedKey = HKDF(K,aad_3_75) in
    {32}let COSE_ENC_3_78: bitstring = encrypt(signature_3_76,K_3_77,aad_3_75) in
    {33}let message_3_79: bitstring = (data_3_74,COSE_ENC_3_78) in
    {34}out(c, message_3_79)
) | (
    {35}!
    {36}new y_80: exponent;
    {37}let E_V: G = exp(g,y_80) in
    {38}new S_V: bitstring;
    {39}in(c, message_1_81: bitstring);
    {40}let (xMSG_TYPE_1_82: bitstring,xS_U: bitstring,xN_U: nonce,xE_U: G,APP_1_83: bitstring) = message_1_81 in
    {41}new N_V_84: nonce;
    {42}new APP_85: bitstring;
    {43}let data_2_86: bitstring = (MSG_TYPE_2,xS_U,S_V,N_V_84,E_V) in
    {44}let aad_2_87: bitstring = hash((message_1_81,data_2_86)) in
    {45}let signature_2_88: bitstring = sign((identifyPK(skV,pkV),aad_2_87,APP_85),skV) in
    {46}let K_89: G = exp(xE_U,y_80) in
    {47}let K_2_90: derivedKey = HKDF(K_89,aad_2_87) in
    {48}let COSE_ENC_2_91: bitstring = encrypt(signature_2_88,K_2_90,aad_2_87) in
    {49}let message_2_92: bitstring = (data_2_86,COSE_ENC_2_91) in
    {50}out(c, message_2_92);
    {51}in(c, message_3_93: bitstring);
    {52}let (data_3_94: bitstring,COSE_ENC_3_95: bitstring) = message_3_93 in
    {53}let (=MSG_TYPE_3,=S_V) = data_3_94 in
    {54}let aad_3_96: bitstring = hash((hash((message_1_81,message_2_92)),data_3_94)) in
    {55}let K_3_97: derivedKey = HKDF(K_89,aad_3_96) in
    {56}let signature_3_98: bitstring = decrypt(COSE_ENC_3_95,K_3_97,aad_3_96) in
    {57}let (=pkIdU,=aad_3_96,APP_3_99: bitstring) = verify(signature_3_98,pkU) in
    0
)

-- Query not attacker(identifyPK(skV[],pk(skV[]))); not attacker(identifyPK(skU[],pk(skU[])))
Completing...
Starting query not attacker(identifyPK(skV[],pk(skV[])))
goal reachable: attacker(identifyPK(skV[],pk(skV[])))
Abbreviations:
S = S_V[!1 = @sid_2516]
N_V_2527 = N_V_84[message_1_81 = (xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),!1 = @sid_2516]
y_2528 = y_80[!1 = @sid_2516]
APP = APP_85[message_1_81 = (xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),!1 = @sid_2516]
N_V_2529 = N_V_84[message_1_81 = (xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),!1 = @sid_2516]
APP_2530 = APP_85[message_1_81 = (xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),!1 = @sid_2516]
N_V_2531 = N_V_84[message_1_81 = (xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),!1 = @sid_2516]
APP_2532 = APP_85[message_1_81 = (xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),!1 = @sid_2516]

1. The message pk(skV[]) may be sent to the attacker at output {10}.
attacker(pk(skV[])).

2. The attacker has some term APP_1_2482.
attacker(APP_1_2482).

3. The attacker has some term xE_U_2481.
attacker(xE_U_2481).

4. The attacker has some term xN_U_2480.
attacker(xN_U_2480).

5. The attacker has some term xS_U_2479.
attacker(xS_U_2479).

6. The attacker has some term xMSG_TYPE_1_2478.
attacker(xMSG_TYPE_1_2478).

7. By 6, the attacker may know xMSG_TYPE_1_2478.
By 5, the attacker may know xS_U_2479.
By 4, the attacker may know xN_U_2480.
By 3, the attacker may know xE_U_2481.
By 2, the attacker may know APP_1_2482.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482).
attacker((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482)).

8. The message (xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482) that the attacker may have by 7 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)))),APP_2532),skV[]),HKDF(exp(xE_U_2481,y_2528),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)))),APP_2532),skV[]),HKDF(exp(xE_U_2481,y_2528),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528))))))).

9. By 8, the attacker may know ((MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)))),APP_2532),skV[]),HKDF(exp(xE_U_2481,y_2528),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2478,xS_U_2479,xN_U_2480,xE_U_2481,APP_1_2482),(MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)).
attacker((MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528))).

10. By 9, the attacker may know (MSG_TYPE_2[],xS_U_2479,S,N_V_2531,exp(g,y_2528)).
Using the function 5-proj-5-tuple the attacker may obtain exp(g,y_2528).
attacker(exp(g,y_2528)).

11. The attacker has some term APP_1_2515.
attacker(APP_1_2515).

12. Using the function g the attacker may obtain g.
attacker(g).

13. The attacker has some term xN_U_2513.
attacker(xN_U_2513).

14. The attacker has some term xS_U_2512.
attacker(xS_U_2512).

15. The attacker has some term xMSG_TYPE_1_2511.
attacker(xMSG_TYPE_1_2511).

16. By 15, the attacker may know xMSG_TYPE_1_2511.
By 14, the attacker may know xS_U_2512.
By 13, the attacker may know xN_U_2513.
By 12, the attacker may know g.
By 11, the attacker may know APP_1_2515.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515).
attacker((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515)).

17. The message (xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515) that the attacker may have by 16 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))))).

18. By 17, the attacker may know ((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)).
attacker((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))).

19. By 18, the attacker may know (MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)).
Using the function 4-proj-5-tuple the attacker may obtain N_V_2527.
attacker(N_V_2527).

20. The attacker has some term APP_1_2428.
attacker(APP_1_2428).

21. The attacker has some term xE_U_2427.
attacker(xE_U_2427).

22. The attacker has some term xN_U_2426.
attacker(xN_U_2426).

23. The attacker has some term xS_U_2425.
attacker(xS_U_2425).

24. The attacker has some term xMSG_TYPE_1_2424.
attacker(xMSG_TYPE_1_2424).

25. By 24, the attacker may know xMSG_TYPE_1_2424.
By 23, the attacker may know xS_U_2425.
By 22, the attacker may know xN_U_2426.
By 21, the attacker may know xE_U_2427.
By 20, the attacker may know APP_1_2428.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428).
attacker((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428)).

26. The message (xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428) that the attacker may have by 25 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)))),APP_2530),skV[]),HKDF(exp(xE_U_2427,y_2528),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)))),APP_2530),skV[]),HKDF(exp(xE_U_2427,y_2528),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528))))))).

27. By 26, the attacker may know ((MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)))),APP_2530),skV[]),HKDF(exp(xE_U_2427,y_2528),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2424,xS_U_2425,xN_U_2426,xE_U_2427,APP_1_2428),(MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)).
attacker((MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528))).

28. By 27, the attacker may know (MSG_TYPE_2[],xS_U_2425,S,N_V_2529,exp(g,y_2528)).
Using the function 3-proj-5-tuple the attacker may obtain S.
attacker(S).

29. The attacker initially knows MSG_TYPE_2[].
attacker(MSG_TYPE_2[]).

30. By 29, the attacker may know MSG_TYPE_2[].
By 14, the attacker may know xS_U_2512.
By 28, the attacker may know S.
By 19, the attacker may know N_V_2527.
By 10, the attacker may know exp(g,y_2528).
Using the function 5-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)).
attacker((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))).

31. By 16, the attacker may know (xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515).
By 30, the attacker may know (MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)).
Using the function 2-tuple the attacker may obtain ((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))).
attacker(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))).

32. By 31, the attacker may know ((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))).
Using the function hash the attacker may obtain hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))).
attacker(hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))).

33. By 10, the attacker may know exp(g,y_2528).
By 32, the attacker may know hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))).
Using the function HKDF the attacker may obtain HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))).
attacker(HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))))).

34. By 17, the attacker may know ((MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))))).
Using the function 2-proj-2-tuple the attacker may obtain encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))).
attacker(encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))))).

35. By 34, the attacker may know encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]),HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))).
By 33, the attacker may know HKDF(exp(g,y_2528),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528))))).
By 32, the attacker may know hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))).
Using the function decrypt the attacker may obtain sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]).
attacker(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[])).

36. By 35, the attacker may know sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP),skV[]).
By 1, the attacker may know pk(skV[]).
Using the function verify the attacker may obtain (identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP).
attacker((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP)).

37. By 36, the attacker may know (identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_2511,xS_U_2512,xN_U_2513,g,APP_1_2515),(MSG_TYPE_2[],xS_U_2512,S,N_V_2527,exp(g,y_2528)))),APP).
Using the function 1-proj-3-tuple the attacker may obtain identifyPK(skV[],pk(skV[])).
attacker(identifyPK(skV[],pk(skV[]))).


Unified xMSG_TYPE_1_2511 with xMSG_TYPE_1_2424
Unified xS_U_2512 with xS_U_2425
Unified xN_U_2513 with xN_U_2426
Unified xE_U_2427 with g
Unified APP_1_2515 with APP_1_2428
Unified xMSG_TYPE_1_2478 with xMSG_TYPE_1_2424
Unified xS_U_2479 with xS_U_2425
Unified xN_U_2480 with xN_U_2426
Unified xE_U_2481 with g
Unified APP_1_2482 with APP_1_2428
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(identifyPK(skV[],pk(skV[])))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new U: host creating U_2772 at {1}

new V: host creating V_2773 at {2}

new skU: skey creating skU_2774 at {3}

new skV: skey creating skV_2695 at {4}

out(c, ~M_2941) with ~M_2941 = pk(skU_2774) at {9}

out(c, ~M_2943) with ~M_2943 = pk(skV_2695) at {10}

new y_80: exponent creating y_2698 at {36} in copy a_2694

new S_V: bitstring creating S_V_2696 at {38} in copy a_2694

in(c, (a_2690,a_2691,a_2692,g,a_2693)) at {39} in copy a_2694

new N_V_84: nonce creating N_V_2697 at {41} in copy a_2694

new APP_85: bitstring creating APP_2699 at {42} in copy a_2694

out(c, ((~M_3106,~M_3107,~M_3108,~M_3109,~M_3110),~M_3105)) with ~M_3106 = MSG_TYPE_2, ~M_3107 = a_2691, ~M_3108 = S_V_2696, ~M_3109 = N_V_2697, ~M_3110 = exp(g,y_2698), ~M_3105 = encrypt(sign((identifyPK(skV_2695,pk(skV_2695)),hash(((a_2690,a_2691,a_2692,g,a_2693),(MSG_TYPE_2,a_2691,S_V_2696,N_V_2697,exp(g,y_2698)))),APP_2699),skV_2695),HKDF(exp(g,y_2698),hash(((a_2690,a_2691,a_2692,g,a_2693),(MSG_TYPE_2,a_2691,S_V_2696,N_V_2697,exp(g,y_2698))))),hash(((a_2690,a_2691,a_2692,g,a_2693),(MSG_TYPE_2,a_2691,S_V_2696,N_V_2697,exp(g,y_2698))))) at {50} in copy a_2694

The attacker has the message 1-proj-3-tuple(verify(decrypt(~M_3105,HKDF(~M_3110,hash(((a_2690,a_2691,a_2692,g,a_2693),(MSG_TYPE_2,a_2691,~M_3108,~M_3109,~M_3110)))),hash(((a_2690,a_2691,a_2692,g,a_2693),(MSG_TYPE_2,a_2691,~M_3108,~M_3109,~M_3110)))),~M_2943)) = identifyPK(skV_2695,pk(skV_2695)).
A trace has been found.
The previous trace falsifies the query, because the query is
simple and the trace corresponds to the derivation.
RESULT not attacker(identifyPK(skV[],pk(skV[]))) is false.
Starting query not attacker(identifyPK(skU[],pk(skU[])))
RESULT not attacker(identifyPK(skU[],pk(skU[]))) is true.
-- Query not attacker(APP_85[message_1_81 = v_3113,!1 = v_3114]); not attacker(APP_73[message_2_66 = v_3111,!1 = v_3112])
Completing...
Starting query not attacker(APP_85[message_1_81 = v_3113,!1 = v_3114])
goal reachable: attacker(xMSG_TYPE_1_5337) && attacker(xS_U_5338) && attacker(xN_U_5339) && attacker(y_5340) && attacker(APP_1_5341) -> attacker(APP_85[message_1_81 = (xMSG_TYPE_1_5337,xS_U_5338,xN_U_5339,exp(g,y_5340),APP_1_5341),!1 = @sid_5342])
Abbreviations:
APP_5464 = APP_85[message_1_81 = (xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),!1 = @sid_5451]
S_5465 = S_V[!1 = @sid_5451]
N_V_5466 = N_V_84[message_1_81 = (xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),!1 = @sid_5451]
y_5467 = y_80[!1 = @sid_5451]
N_V_5468 = N_V_84[message_1_81 = (xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),!1 = @sid_5451]
APP_5469 = APP_85[message_1_81 = (xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),!1 = @sid_5451]
N_V_5470 = N_V_84[message_1_81 = (xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),!1 = @sid_5451]
APP_5471 = APP_85[message_1_81 = (xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),!1 = @sid_5451]

1. The message pk(skV[]) may be sent to the attacker at output {10}.
attacker(pk(skV[])).

2. The attacker has some term APP_1_5417.
attacker(APP_1_5417).

3. The attacker has some term xE_U_5416.
attacker(xE_U_5416).

4. The attacker has some term xN_U_5415.
attacker(xN_U_5415).

5. The attacker has some term xS_U_5414.
attacker(xS_U_5414).

6. The attacker has some term xMSG_TYPE_1_5413.
attacker(xMSG_TYPE_1_5413).

7. By 6, the attacker may know xMSG_TYPE_1_5413.
By 5, the attacker may know xS_U_5414.
By 4, the attacker may know xN_U_5415.
By 3, the attacker may know xE_U_5416.
By 2, the attacker may know APP_1_5417.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417).
attacker((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417)).

8. The message (xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417) that the attacker may have by 7 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)))),APP_5471),skV[]),HKDF(exp(xE_U_5416,y_5467),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)))),APP_5471),skV[]),HKDF(exp(xE_U_5416,y_5467),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467))))))).

9. By 8, the attacker may know ((MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)))),APP_5471),skV[]),HKDF(exp(xE_U_5416,y_5467),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5413,xS_U_5414,xN_U_5415,xE_U_5416,APP_1_5417),(MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)).
attacker((MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467))).

10. By 9, the attacker may know (MSG_TYPE_2[],xS_U_5414,S_5465,N_V_5470,exp(g,y_5467)).
Using the function 5-proj-5-tuple the attacker may obtain exp(g,y_5467).
attacker(exp(g,y_5467)).

11. We assume as hypothesis that
attacker(APP_1_5450).

12. We assume as hypothesis that
attacker(y_5407).

13. Using the function g the attacker may obtain g.
attacker(g).

14. By 13, the attacker may know g.
By 12, the attacker may know y_5407.
Using the function exp the attacker may obtain exp(g,y_5407).
attacker(exp(g,y_5407)).

15. We assume as hypothesis that
attacker(xN_U_5448).

16. We assume as hypothesis that
attacker(xS_U_5447).

17. We assume as hypothesis that
attacker(xMSG_TYPE_1_5446).

18. By 17, the attacker may know xMSG_TYPE_1_5446.
By 16, the attacker may know xS_U_5447.
By 15, the attacker may know xN_U_5448.
By 14, the attacker may know exp(g,y_5407).
By 11, the attacker may know APP_1_5450.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450).
attacker((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450)).

19. The message (xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450) that the attacker may have by 18 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))))).

20. By 19, the attacker may know ((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)).
attacker((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))).

21. By 20, the attacker may know (MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)).
Using the function 4-proj-5-tuple the attacker may obtain N_V_5466.
attacker(N_V_5466).

22. The attacker has some term APP_1_5359.
attacker(APP_1_5359).

23. The attacker has some term xE_U_5358.
attacker(xE_U_5358).

24. The attacker has some term xN_U_5357.
attacker(xN_U_5357).

25. The attacker has some term xS_U_5356.
attacker(xS_U_5356).

26. The attacker has some term xMSG_TYPE_1_5355.
attacker(xMSG_TYPE_1_5355).

27. By 26, the attacker may know xMSG_TYPE_1_5355.
By 25, the attacker may know xS_U_5356.
By 24, the attacker may know xN_U_5357.
By 23, the attacker may know xE_U_5358.
By 22, the attacker may know APP_1_5359.
Using the function 5-tuple the attacker may obtain (xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359).
attacker((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359)).

28. The message (xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359) that the attacker may have by 27 may be received at input {39}.
So the message ((MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)))),APP_5469),skV[]),HKDF(exp(xE_U_5358,y_5467),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)))))) may be sent to the attacker at output {50}.
attacker(((MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)))),APP_5469),skV[]),HKDF(exp(xE_U_5358,y_5467),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467))))))).

29. By 28, the attacker may know ((MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)))),APP_5469),skV[]),HKDF(exp(xE_U_5358,y_5467),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5355,xS_U_5356,xN_U_5357,xE_U_5358,APP_1_5359),(MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)))))).
Using the function 1-proj-2-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)).
attacker((MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467))).

30. By 29, the attacker may know (MSG_TYPE_2[],xS_U_5356,S_5465,N_V_5468,exp(g,y_5467)).
Using the function 3-proj-5-tuple the attacker may obtain S_5465.
attacker(S_5465).

31. The attacker initially knows MSG_TYPE_2[].
attacker(MSG_TYPE_2[]).

32. By 31, the attacker may know MSG_TYPE_2[].
By 16, the attacker may know xS_U_5447.
By 30, the attacker may know S_5465.
By 21, the attacker may know N_V_5466.
By 10, the attacker may know exp(g,y_5467).
Using the function 5-tuple the attacker may obtain (MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)).
attacker((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))).

33. By 18, the attacker may know (xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450).
By 32, the attacker may know (MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)).
Using the function 2-tuple the attacker may obtain ((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))).
attacker(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))).

34. By 33, the attacker may know ((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))).
Using the function hash the attacker may obtain hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))).
attacker(hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))).

35. By 10, the attacker may know exp(g,y_5467).
By 12, the attacker may know y_5407.
Using the function exp the attacker may obtain exp(exp(g,y_5407),y_5467).
attacker(exp(exp(g,y_5407),y_5467)).

36. By 35, the attacker may know exp(exp(g,y_5407),y_5467).
By 34, the attacker may know hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))).
Using the function HKDF the attacker may obtain HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))).
attacker(HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))))).

37. By 19, the attacker may know ((MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)),encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))))).
Using the function 2-proj-2-tuple the attacker may obtain encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))).
attacker(encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))))).

38. By 37, the attacker may know encrypt(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]),HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))).
By 36, the attacker may know HKDF(exp(exp(g,y_5407),y_5467),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467))))).
By 34, the attacker may know hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))).
Using the function decrypt the attacker may obtain sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]).
attacker(sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[])).

39. By 38, the attacker may know sign((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464),skV[]).
By 1, the attacker may know pk(skV[]).
Using the function verify the attacker may obtain (identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464).
attacker((identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464)).

40. By 39, the attacker may know (identifyPK(skV[],pk(skV[])),hash(((xMSG_TYPE_1_5446,xS_U_5447,xN_U_5448,exp(g,y_5407),APP_1_5450),(MSG_TYPE_2[],xS_U_5447,S_5465,N_V_5466,exp(g,y_5467)))),APP_5464).
Using the function 3-proj-3-tuple the attacker may obtain APP_5464.
attacker(APP_5464).


Unified xMSG_TYPE_1_5446 with xMSG_TYPE_1_5355
Unified xS_U_5447 with xS_U_5356
Unified xN_U_5448 with xN_U_5357
Unified xE_U_5358 with exp(g,y_5407)
Unified APP_1_5450 with APP_1_5359
Unified xMSG_TYPE_1_5413 with xMSG_TYPE_1_5355
Unified xS_U_5414 with xS_U_5356
Unified xN_U_5415 with xN_U_5357
Unified xE_U_5416 with exp(g,y_5407)
Unified APP_1_5417 with APP_1_5359
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(APP_1_5722) && attacker(xN_U_5720) && attacker(xS_U_5719) && attacker(xMSG_TYPE_1_5718) && attacker(y_5721) -> attacker(APP_85[message_1_81 = (xMSG_TYPE_1_5718,xS_U_5719,xN_U_5720,exp(g,y_5721),APP_1_5722),!1 = @sid_5723])
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new U: host creating U_5817 at {1}

new V: host creating V_5818 at {2}

new skU: skey creating skU_5819 at {3}

new skV: skey creating skV_5731 at {4}

out(c, ~M_5987) with ~M_5987 = pk(skU_5819) at {9}

out(c, ~M_5989) with ~M_5989 = pk(skV_5731) at {10}

new y_80: exponent creating y_5734 at {36} in copy a_5729

new S_V: bitstring creating S_V_5732 at {38} in copy a_5729

in(c, (a_5724,a_5725,a_5726,exp(g,a_5727),a_5728)) at {39} in copy a_5729

new N_V_84: nonce creating N_V_5733 at {41} in copy a_5729

new APP_85: bitstring creating APP_5730 at {42} in copy a_5729

out(c, ((~M_6153,~M_6154,~M_6155,~M_6156,~M_6157),~M_6152)) with ~M_6153 = MSG_TYPE_2, ~M_6154 = a_5725, ~M_6155 = S_V_5732, ~M_6156 = N_V_5733, ~M_6157 = exp(g,y_5734), ~M_6152 = encrypt(sign((identifyPK(skV_5731,pk(skV_5731)),hash(((a_5724,a_5725,a_5726,exp(g,a_5727),a_5728),(MSG_TYPE_2,a_5725,S_V_5732,N_V_5733,exp(g,y_5734)))),APP_5730),skV_5731),HKDF(exp(exp(g,a_5727),y_5734),hash(((a_5724,a_5725,a_5726,exp(g,a_5727),a_5728),(MSG_TYPE_2,a_5725,S_V_5732,N_V_5733,exp(g,y_5734))))),hash(((a_5724,a_5725,a_5726,exp(g,a_5727),a_5728),(MSG_TYPE_2,a_5725,S_V_5732,N_V_5733,exp(g,y_5734))))) at {50} in copy a_5729

The attacker has the message 3-proj-3-tuple(verify(decrypt(~M_6152,HKDF(exp(~M_6157,a_5727),hash(((a_5724,a_5725,a_5726,exp(g,a_5727),a_5728),(MSG_TYPE_2,a_5725,~M_6155,~M_6156,~M_6157)))),hash(((a_5724,a_5725,a_5726,exp(g,a_5727),a_5728),(MSG_TYPE_2,a_5725,~M_6155,~M_6156,~M_6157)))),~M_5989)) = APP_5730.
A trace has been found.
The previous trace falsifies the query, because the query is
simple and the trace corresponds to the derivation.
RESULT not attacker(APP_85[message_1_81 = v_3113,!1 = v_3114]) is false.
Starting query not attacker(APP_73[message_2_66 = v_3111,!1 = v_3112])
RESULT not attacker(APP_73[message_2_66 = v_3111,!1 = v_3112]) is true.
